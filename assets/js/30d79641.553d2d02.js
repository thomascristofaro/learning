"use strict";(self.webpackChunkthomascristofaro_learning=self.webpackChunkthomascristofaro_learning||[]).push([[6429],{5788:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/AL1-51f9031f7c5029cb2e6de2540266724b.png"},12789:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/cicli-279dc1d2a132afa3045066822b8f5dc6.png"},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(96540);const a={},t=s.createContext(a);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}},78807:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"business-central/al-language/basic","title":"Basi del linguaggio AL","description":"AL \xe8 il linguaggio di programmazione utilizzato per manipolare i dati, come recuperare, inserire e modificare record in un database di Dynamics 365 Business Central. Controlla l\'esecuzione dei vari oggetti dell\'applicazione, come pagine, report o codeunit.","source":"@site/docs/business-central/03-al-language/01-basic.md","sourceDirName":"business-central/03-al-language","slug":"/business-central/al-language/basic","permalink":"/learning/docs/business-central/al-language/basic","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"businessCentralSidebar","previous":{"title":"Linguaggio AL","permalink":"/learning/docs/category/linguaggio-al"},"next":{"title":"Funzioni e Trigger","permalink":"/learning/docs/business-central/al-language/function-trigger"}}');var a=i(74848),t=i(28453);const r={},l="Basi del linguaggio AL",o={},c=[{value:"Variabili",id:"variabili",level:2},{value:"Assegnazioni",id:"assegnazioni",level:2},{value:"Costrutti di controllo",id:"costrutti-di-controllo",level:2},{value:"Compound statements",id:"compound-statements",level:2},{value:"Conditional statements",id:"conditional-statements",level:2},{value:"If-then-else statements",id:"if-then-else-statements",level:3},{value:"Case statements",id:"case-statements",level:3},{value:"Repetitive statements (Cicli iterativi)",id:"repetitive-statements-cicli-iterativi",level:2},{value:"Link utili",id:"link-utili",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"basi-del-linguaggio-al",children:"Basi del linguaggio AL"})}),"\n",(0,a.jsx)(n.p,{children:"AL \xe8 il linguaggio di programmazione utilizzato per manipolare i dati, come recuperare, inserire e modificare record in un database di Dynamics 365 Business Central. Controlla l'esecuzione dei vari oggetti dell'applicazione, come pagine, report o codeunit."}),"\n",(0,a.jsx)(n.p,{children:"Con AL, \xe8 possibile creare regole aziendali per garantire che i dati memorizzati nel database siano significativi e coerenti con il modo in cui i clienti gestiscono la loro attivit\xe0. Attraverso la programmazione AL, \xe8 possibile:"}),"\n",(0,a.jsx)(n.p,{children:"Ogni oggetto in Dynamics 365 Business Central contiene trigger in cui \xe8 possibile aggiungere il proprio codice AL. \xc8 possibile avviare l'esecuzione del codice AL tramite le Azioni."}),"\n",(0,a.jsx)(n.h2,{id:"variabili",children:"Variabili"}),"\n",(0,a.jsx)(n.p,{children:"Una variabile, in informatica, \xe8 un contenitore di dati situato in una porzione di memoria destinata a contenere valori, suscettibili di modifica nel corso dell'esecuzione di un programma. Una variabile \xe8 caratterizzata da un nome alfanumerico."}),"\n",(0,a.jsxs)(n.p,{children:["Le variabili in AL vengono dichiarate utilizzando la parola chiave ",(0,a.jsx)(n.em,{children:"var"})," e la sintassi \xe8 simile a questa:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"var\n    myInt: Integer;\n"})}),"\n",(0,a.jsx)(n.p,{children:"E\u2019 possibile dichiarate in una riga pi\xf9 variabili dello stesso tipo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"var\n    myInt, nextInt, thirdInt : Integer;\n    isValid, doCheck : Boolean;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Ogni variabile deve essere obbligatoriamente definita specificando il tipo di dato che conterr\xe0. La variabile pu\xf2 essere dichiarata senza inizializzarla, in questo caso il compilatore assegner\xe0 un valore di default in base al tipo di dato."}),"\n",(0,a.jsx)(n.p,{children:"I tipi di dato primitivi sono:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"var\n    MyText : Text;          // Hello World\n    MyCode : Code[20];      // HELLO-WORLD\n    MyInteger : Integer;    // 123\n    MyDecimal : Decimal;    // 123.45\n    MyBoolean : Boolean;    // true\n    MyDate : Date;          // 31/12/2023\n    MyTime : Time;          // 12:59:59\n    MyDateTime : DateTime;  // 31/12/2023 12:59:59\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/it-it/dynamics365/business-central/dev-itpro/developer/methods-auto/library",children:"Qui"})," \xe8 possibile trovare la lista completa dei tipi di dato."]}),"\n",(0,a.jsx)(n.h2,{id:"assegnazioni",children:"Assegnazioni"}),"\n",(0,a.jsxs)(n.p,{children:["Le assegnazioni assegnano un valore ad una variabile. Il valore che assegni \xe8 un'espressione AL. Pu\xf2 essere una costante, una variabile, o pu\xf2 consistere nel valore di ritorno di una funzione. L'operatore di assegnazione \xe8 il segno di due punti uguale ",(0,a.jsx)(n.strong,{children:":="}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"// una costante\nCount := 1;\n\n// una costante, un operatore e una variabile\nAmount := 2 * Price;\n\n// valore di ritorno di una funzione\nAmount := CalcAmount(Price, Quantity);\n"})}),"\n",(0,a.jsx)(n.p,{children:"E\u2019 consentito eseguire operazioni aritmetiche su una variabile ed assegnarne il risultato alla variabile stessa, con la seguente sintassi:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"Counter := 0;\n\n// you can use this syntax \n\n// for addition\nCounter += 1;\n// for subtraction\nCounter -= 1;\n// for multiplication\nCounter *= 1:\n// for division\nCounter /= 1;\n\n// instead of \nCounter := Counter + 1;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Anche con le stringhe \xe8 possibile utilizzare la stessa sintassi per concatenarle:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:'String := "Hello ";\nString += "World";\n'})}),"\n",(0,a.jsx)(n.h2,{id:"costrutti-di-controllo",children:"Costrutti di controllo"}),"\n",(0,a.jsx)(n.p,{children:"Il codice AL \xe8 composto da una serie di istruzioni, eseguite sequenzialmente in un ordine dall'alto verso il basso. Tuttavia, spesso sar\xe0 necessario controllare il flusso dell'esecuzione: le istruzioni potrebbero dover essere ripetute pi\xf9 di una volta, oppure potrebbe essere necessario condizionare il codice. Per farlo, si utilizzano le strutture di controllo. In AL sono divise nei seguenti gruppi principali:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Compound statements"}),"\n",(0,a.jsx)(n.li,{children:"Conditional statements"}),"\n",(0,a.jsx)(n.li,{children:"Repetitive statements"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"compound-statements",children:"Compound statements"}),"\n",(0,a.jsx)(n.p,{children:'In alcuni casi, la sintassi AL consente solo l\'uso di una singola istruzione. Tuttavia, se \xe8 necessario eseguire pi\xf9 di una semplice istruzione, le istruzioni possono essere scritte come una dichiarazione composta (una dichiarazione di blocco) racchiudendole tra le parole chiave "begin" e "end".'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"begin\n    <Statement 1>;  \n    <Statement 2>;  \n    ..  \n    <Statement n>;  \nend;\n"})}),"\n",(0,a.jsx)(n.p,{children:'Le singole istruzioni sono separate da un punto e virgola. In AL, il punto e virgola \xe8 utilizzato per separare le istruzioni e non per terminarle, come avviene in altri linguaggi di programmazione. Tuttavia, un punto e virgola aggiuntivo prima di una parola chiave "end" non causa un errore perch\xe9 viene interpretato dal compilatore come un\'istruzione vuota.'}),"\n",(0,a.jsx)(n.h2,{id:"conditional-statements",children:"Conditional statements"}),"\n",(0,a.jsx)(n.p,{children:"Si utilizzano le istruzioni condizionali per specificare una condizione e uno o pi\xf9 comandi da eseguire se la condizione viene valutata come vera o falsa. Esistono due tipi di istruzioni condizionali in AL:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"IF-THEN-ELSE, dove ci sono due scelte"}),"\n",(0,a.jsx)(n.li,{children:"CASE, dove ci sono pi\xf9 di due scelte"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"if-then-else-statements",children:"If-then-else statements"}),"\n",(0,a.jsxs)(n.p,{children:["Se ",(0,a.jsx)(n.code,{children:"<Condition>"})," \xe8 vera, allora viene eseguita ",(0,a.jsx)(n.code,{children:"<Statement1>"}),". Se ",(0,a.jsx)(n.code,{children:"<Condition>"})," \xe8 falsa, allora viene eseguita ",(0,a.jsx)(n.code,{children:"<Statement2>"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"if <Condition> then  \n    <Statement1>  \n[else  \n    <Statement2>]\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Il ramo else \xe8 opzionale"}),"\n",(0,a.jsx)(n.li,{children:"Le condizioni si possono annidare in modo strutturato"}),"\n",(0,a.jsx)(n.li,{children:"Gruppi di istruzioni possono essere racchiusi tra BEGIN .. END"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"if <Condition1> then   \n    if <Condition2> then   \n        <Statement1>   \n    else  \n        <Statement2>\n"})}),"\n",(0,a.jsx)(n.p,{children:"La condizione pu\xf2 essere:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["un\u2019espressione semplice: ",(0,a.jsx)(n.code,{children:"if x = y then"})]}),"\n",(0,a.jsxs)(n.li,{children:["un'espressione negata: ",(0,a.jsx)(n.code,{children:"if not (x = y) then"})]}),"\n",(0,a.jsxs)(n.li,{children:["un\u2019espressione composta da pi\xf9 condizioni AND e OR: ",(0,a.jsx)(n.code,{children:"if (x = y) and (a = b) then"})," la gerarchia si esprime con l\u2019utilizzo delle parentesi tonde."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Gli operatori di confronto sono:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Simbolo"}),(0,a.jsx)(n.th,{children:"Significato"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"="})}),(0,a.jsx)(n.td,{children:"uguale"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"<>"})}),(0,a.jsx)(n.td,{children:"diverso"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:">"})}),(0,a.jsx)(n.td,{children:"maggiore"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"<"})}),(0,a.jsx)(n.td,{children:"minore"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:">="})}),(0,a.jsx)(n.td,{children:"maggiore o uguale"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"<="})}),(0,a.jsx)(n.td,{children:"minore o uguale"})]})]})]}),"\n",(0,a.jsx)(n.p,{children:"Esempio:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"if (var1 = var2) and   \n    (var3 > var4)  \nthen begin\n    x := a;\n    y := b;\nend else begin\n    a := x;\n    b := y;\nend;\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"if statement",src:i(5788).A+"",width:"850",height:"889"})}),"\n",(0,a.jsx)(n.h3,{id:"case-statements",children:"Case statements"}),"\n",(0,a.jsxs)(n.p,{children:["Il risultato di ",(0,a.jsx)(n.code,{children:"<Expression>"})," viene confrontato con ciascun set di valori, e ",(0,a.jsx)(n.code,{children:"<Value Set>"})," deve essere un'espressione o un intervallo."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"case <Expression> of  \n    <Value set 1>:  \n        <Statement 1>;  \n    <Value set 2>:  \n        <Statement 2>;  \n    ..\n    <Value set n>:  \n        <Statement n>;  \n[else  \n    <Statement n+1>]  \nend;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Viene utilizzato quando \xe8 necessario scegliere tra pi\xf9 di due azioni diverse. Il metodo dello statement case \xe8 il seguente:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["L'espressione ",(0,a.jsx)(n.code,{children:"<Expression>"})," viene valutata e il primo set di valori corrispondente esegue l'istruzione associata, se presente."]}),"\n",(0,a.jsxs)(n.li,{children:["Se nessun set di valori corrisponde, viene eseguita l'istruzione associata alla clausola ",(0,a.jsx)(n.code,{children:"else"}),", se presente."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"case Number of  \n    1,2,9:  \n        begin\n            x := 1;\n            message('1, 2, or 9.');\n        end;  \n    10..100:  \n        message('In the range from 10 to 100.');  \nelse  \n    message('Neither 1, 2, 9, nor in the range from 10 to 100.');  \nend;\n\n// ------------------------------------------------\n\nMyCode := 'ABC';  \ncase MyCode of  \n    'abc':  \n        message('This message is not displayed.');   \n    'def':  \n        message('This message is not displayed.');  \nelse  \n    message('The value set does not match the expression.');\nend;\n"})}),"\n",(0,a.jsx)(n.h2,{id:"repetitive-statements-cicli-iterativi",children:"Repetitive statements (Cicli iterativi)"}),"\n",(0,a.jsx)(n.p,{children:"Un'istruzione ripetitiva \xe8 anche nota come loop. Sono utilizzati per eseguire pi\xf9 volte parti di codice in funione di una condizione. Esistono quattro tipi di ciclo in AL:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"repeat-until"}),"\n",(0,a.jsx)(n.li,{children:"while-do"}),"\n",(0,a.jsx)(n.li,{children:"for"}),"\n",(0,a.jsx)(n.li,{children:"for-each"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Nel ciclo ",(0,a.jsx)(n.strong,{children:"repeat-until"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"repeat\n    <Statements>\nuntil <Condition>\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Le istruzioni sono eseguite fino al verificarsi della condizione."}),"\n",(0,a.jsx)(n.li,{children:"Il ciclo sar\xe0 eseguito come minimo una volta (1 to N)."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Esempi:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"if x < y then begin\n    repeat\n        x := x + 1;\n        a := a -1;\n    until x = y;\n        b := x;\nend;\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"Count := 0;\nif Customer.find('-') then\nrepeat\n    Count := Count + 1;\nuntil Customer.next <= 0;\nmessage('The Customer table contains %1 record.',Count);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Nel ciclo ",(0,a.jsx)(n.strong,{children:"while-do"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"while <expr> do\n    <Statement>;\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"while <expr> and\n    <expr> and\n    <expr>\ndo begin\n    <Statement>;\n    <Statement>;\nend;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Esempi:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"while I < 1000 do\n    I := I + 1;\nmessage(format(I));\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"while Count < 1000 do\n    begin\n    Count := Count + 1;\n    message(FORMAT(Count));\n    if Count = 10 then\n        break;\n    end;\nend;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Il ciclo ",(0,a.jsx)(n.strong,{children:"for-to"})," e ",(0,a.jsx)(n.strong,{children:"for-downto"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"for <Control Variable> := <Start Number> to <End Number> do\n    <Statement>\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"for <Control Variable> := <Start Number> downto <End Number> do\n    <Statement>\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"le istruzioni sono eseguite un numero certo di volte (1 to N)"}),"\n",(0,a.jsx)(n.li,{children:"l'iterazione \xe8 gestita da una variabile di controllo (Integer)"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Il ciclo ",(0,a.jsx)(n.strong,{children:"FOREACH"}),' \xe8 usato per scorrere tutti i valori presenti in una "lista".']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"foreach <Element> in <List> do <Statement>\n    <Statement>\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-al",children:"procedure PrintCustomerNames(customerNames : List of [Text]);\nvar\n    customerName : Text;\nbegin\n    foreach customerName in customerNames do\n        message(customerName);\nend;\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"cicli iterativi",src:i(12789).A+"",width:"653",height:"353"})}),"\n",(0,a.jsx)(n.h2,{id:"link-utili",children:"Link utili"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/it-it/dynamics365/business-central/dev-itpro/developer/devenv-reference-overview",children:"Panoramica"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/it-it/training/modules/intro-basics-al-programming/",children:"Introduzione alla programmazione AL"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);