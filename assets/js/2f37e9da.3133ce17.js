"use strict";(self.webpackChunkthomascristofaro_learning=self.webpackChunkthomascristofaro_learning||[]).push([[6374],{7975:(e,i,n)=>{n.d(i,{A:()=>o});const o=n.p+"assets/images/git5-9c198debb84f5c184a95f1f058d5091a.png"},20286:(e,i,n)=>{n.d(i,{A:()=>o});const o=n.p+"assets/images/git4-bbe36905489db46c98a4a8bbf5019747.png"},28453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>t});var o=n(96540);const r={},s=o.createContext(r);function l(e){const i=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(s.Provider,{value:i},e.children)}},48257:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"business-central/dev-tools/git","title":"Git","description":"Introduzione","source":"@site/docs/business-central/02-dev-tools/03-git.md","sourceDirName":"business-central/02-dev-tools","slug":"/business-central/dev-tools/git","permalink":"/learning/docs/business-central/dev-tools/git","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"businessCentralSidebar","previous":{"title":"Visual Studio Code","permalink":"/learning/docs/business-central/dev-tools/visual-studio-code"},"next":{"title":"Debugger","permalink":"/learning/docs/business-central/dev-tools/debugger"}}');var r=n(74848),s=n(28453);const l={},t="Git",c={},d=[{value:"Introduzione",id:"introduzione",level:2},{value:"Repository",id:"repository",level:2},{value:"Git Flow",id:"git-flow",level:2},{value:"Comandi Principali",id:"comandi-principali",level:2},{value:"Esempio linea di comando",id:"esempio-linea-di-comando",level:2},{value:"Integrazione con Visual Studio Code",id:"integrazione-con-visual-studio-code",level:2},{value:"Riferimenti",id:"riferimenti",level:2}];function a(e){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"git",children:"Git"})}),"\n",(0,r.jsx)(i.h2,{id:"introduzione",children:"Introduzione"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://git-scm.com/downloads",children:"Download Git"})}),"\n",(0,r.jsx)(i.p,{children:"Git \xe8 un sistema di controllo delle versioni distribuito, progettato per tenere traccia delle modifiche apportate al codice sorgente di un progetto software."}),"\n",(0,r.jsx)("img",{src:n(80726).A,class:"img-left"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Tracciamento delle modifiche"}),": consente di registrare ogni modifica al codice, chi l'ha apportata e quando. Questo \xe8 fondamentale per la gestione del ciclo di vita del software."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Collaborazione Efficiente e Remota"}),": pi\xf9 sviluppatori e team distribuiti possono lavorare contemporaneamente su un progetto, gestendo le proprie modifiche in autonomia."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Controllo delle Versioni"}),": permette di gestire diverse versioni del software in modo organizzato."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Risparmio di Tempo"}),": facilita la fusione di modifiche, riducendo il tempo speso nelle attivit\xe0 di sviluppo."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Sicurezza dei Dati"}),": assicura che il codice sorgente sia ripristinabile in caso di errori o perdita di dati."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Integrazione con Strumenti di Sviluppo"}),": \xe8 integrato con una vasta gamma di strumenti, tra cui IDE e servizi hosting come GitHub, GitLab e Bitbucket."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"repository",children:"Repository"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Repository (Repo)"}),": \xe8 una directory di lavoro o uno spazio di archiviazione in cui viene conservato l'intero ",(0,r.jsx)(i.strong,{children:"storico delle modifiche"})," del progetto. Il repository \xe8 il cuore di Git, dove tutti i file, le cartelle e le modifiche vengono registrati e conservati."]}),"\n",(0,r.jsx)("img",{src:n(62349).A,class:"img-left"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Repository Locale"}),": \xe8 una directory sul tuo computer in cui Git conserva tutte le informazioni relative al tuo progetto, tra cui la cronologia delle modifiche (commit), i branch e i file.\nIl repository locale ",(0,r.jsx)(i.strong,{children:"\xe8 la tua copia di lavoro"})," del progetto, dove puoi apportare modifiche, crearne di nuove e mantenere uno storico completo del codice."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Repository Remoto"}),": \xe8 una copia del tuo repository locale che ",(0,r.jsx)(i.strong,{children:"risiede su un server remoto"})," o in un servizio di hosting Git come GitHub, GitLab o Bitbucket. Il repository remoto \xe8 ",(0,r.jsx)(i.strong,{children:"condiviso con altri membri"})," del team ed \xe8 utilizzato per collaborare, sincronizzare e condividere il codice sorgente."]}),"\n",(0,r.jsx)(i.h2,{id:"git-flow",children:"Git Flow"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Git Flow",src:n(20286).A+"",width:"673",height:"616"})}),"\n",(0,r.jsx)(i.p,{children:"Il flusso di lavoro principale consente di registrare e condividere le modifiche in modo organizzato:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Add"}),' (Aggiungi): la prima fase \xe8 l\'aggiunta delle modifiche alla "staging area" utilizzando il comando ',(0,r.jsx)(i.em,{children:"git add"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Commit"})," (Registra): dopo aver selezionato le modifiche, si esegue il commit utilizzando il comando ",(0,r.jsx)(i.em,{children:"git commit"}),". Questo crea uno snapshot delle modifiche selezionate e le registra nel repository locale con un messaggio descrittivo."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Push"})," (Carica): per condividere le modifiche con gli altri membri del team o con il repository remoto, si utilizza il comando ",(0,r.jsx)(i.em,{children:"git push"}),". Questo carica i commit locali nel repository remoto, mantenendo sicronizzati i repository locale e remoto."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"comandi-principali",children:"Comandi Principali"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"git init"}),": viene utilizzato per inizializzare un nuovo repository Git locale in una directory esistente."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"git clone"}),": viene utilizzato per creare una copia completa di un repository Git remoto sul proprio computer, consentendo di lavorare in modo indipendente sul progetto."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"git commit"}),": un commit \xe8 uno snapshot istantaneo delle modifiche apportate al codice in un determinato momento. Ogni commit ha un messaggio descrittivo. Il comando \xe8 utilizzato per registrare le modifiche nel repository locale dopo averle preparate con git add, consentendo il tracciamento nel tempo."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"git push"}),": consente di inviare i commit locali al repository remoto, sincronizza i repository rendendo le modifiche disponibili per altri membri del team."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"git pull"}),": serve per recuperare e incorporare le modifiche dal repository remoto nel repository locale."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"git branch"}),": un branch \xe8 una linea di sviluppo separata all'interno di un repository. Consente di lavorare su  nuove funzionalit\xe0 o correzioni di bug senza influire sul codice principale. I branch permettono lo sviluppo parallelo e la gestione delle modifiche in modo isolato prima di unirle al codice principale. Il comando viene utilizzato per visualizzare, creare o eliminare branch all'interno di un repository Git."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"git merge"}),": serve per eseguire il merge, cio\xe8 il processo di unione delle modifiche da un branch all\u2019altro, integrando le modifiche del branch di origine in quello di destinazione."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"git checkout"}),": comando che serve per cambiare branch."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"esempio-linea-di-comando",children:"Esempio linea di comando"}),"\n",(0,r.jsx)(i.p,{children:"Creare e sincronizzare un repository locale e remoto:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Creare un repository su github tramite: ",(0,r.jsx)(i.a,{href:"https://github.com/new",children:"GitHub"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Inserire il nome del repository ",(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.em,{children:"my-repo"})})," e cliccare su \xab",(0,r.jsx)(i.strong,{children:"Create repository"}),"\xbb"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Aprire il terminale e posizionarsi su una cartella dove creare il repository"}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Clonare il repository remoto tramite: ",(0,r.jsx)(i.code,{children:"{/git clone<URL_repository>/}"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["All\u2019interno del repository locale creare un file di testo chiamato ",(0,r.jsx)(i.strong,{children:"README.md"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Scrivere dentro il file: ",(0,r.jsx)(i.strong,{children:"# HELLO WORLD"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Aggiungere il file README alla staging area: ",(0,r.jsxs)(i.strong,{children:[(0,r.jsx)(i.em,{children:"git add"})," README.md"]})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Eseguire il commit delle modifiche tramite:  ",(0,r.jsxs)(i.strong,{children:[(0,r.jsx)(i.em,{children:"git commit"}),' -m "Aggiunto il file README"']})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Pusha il commit nel repository su GitHub: ",(0,r.jsxs)(i.strong,{children:[(0,r.jsx)(i.em,{children:"git push"})," origin main"]})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"integrazione-con-visual-studio-code",children:"Integrazione con Visual Studio Code"}),"\n",(0,r.jsx)(i.p,{children:"Adesso che abbiamo sia un progetto locale che un repository remoto proviamo a sincronizzarli:"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Sincronizzare",src:n(7975).A+"",width:"717",height:"772"})}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Aprire il progetto di VS Code"})," creato in precedenza: lo pubblicheremo su github"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Andare nel tab di Git e quindi cliccare su \xab",(0,r.jsx)(i.strong,{children:"Inizializza repository"}),"\xbb"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Come mostrato nella prima foto ",(0,r.jsx)(i.strong,{children:"aggiungere un repository remoto"})]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Come mostrato nella seconda foto eseguire il \xab",(0,r.jsx)(i.strong,{children:"Pull da"}),"\xbb e scegliere il branch main (l\u2019unico esistente)"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsx)(i.p,{children:"Tornare nel tab dell\u2019esplora file e vedere se il file README.md \xe8 stato aggiunto"}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Tornare nel tab git, ",(0,r.jsx)(i.strong,{children:"inserire un messaggio di commit"})," e cliccare su commit"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Pushare il tutto"})," con lo stesso pulsante"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"riferimenti",children:"Riferimenti"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://git-scm.com/",children:"Git"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://code.visualstudio.com/docs/sourcecontrol/overview",children:"Git in VS Code"})}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},62349:(e,i,n)=>{n.d(i,{A:()=>o});const o=n.p+"assets/images/git2-9df2dee2dd9ddf25b2f875bc9dda57a6.png"},80726:(e,i,n)=>{n.d(i,{A:()=>o});const o=n.p+"assets/images/git1-2699c65eeb2abfbd93c4474741f047e2.png"}}]);